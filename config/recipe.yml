# image will be published to ghcr.io/<user>/<name>
name: blueberry-pancake
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/kinoite-main
image-version: 39 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr:
          /usr
          # copy static configurations
          #
          # copies config/files/usr into your image's /usr
          #
          # configuration you wish to end up in /etc/ on the booted system
          # should be added into /usr/etc/ as that is the proper "distro"
          # config directory on ostree. Read more in the files module's README
      - etc:
          /etc
          

  - type: rpm-ostree
    repos: # - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
      - https://download.docker.com/linux/fedora/docker-ce.repo
      - https://copr.fedorainfracloud.org/coprs/birkch/Koi/repo/fedora-%OS_VERSION%/birkch-Koi-fedora-%OS_VERSION%.repo
    install:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
      - fastfetch
      - fish
      - gnome-boxes
      - code
      - Koi
      - lightly
      - solaar
      - zerotier-one
      # - micro
      # - starship
    remove:
      - firefox # default firefox removed in favor of flatpak
      - firefox-langpacks # langpacks needs to also be removed to prevent dependency problems

  - type: bling # configure what to pull in from ublue-os/bling
    install:
      # - justfiles #DEPRECATED!
        # add "!include /usr/share/ublue-os/just/100-bling.just"
        # in your custom.just (added by default) or local justfile
      # - nix-installer # shell shortcuts for determinate system's nix installers DEPRECATED!
      - ublue-os-wallpapers
      # - ublue-update # https://github.com/ublue-os/ublue-update
      - 1password # install 1Password (stable) and `op` CLI tool
      # - dconf-update-service # a service unit that updates the dconf db on boot
      # - devpod # https://devpod.sh/ as an rpm
      # - gnome-vrr # enables gnome-vrr for your image
      # - container-tools # installs container-related tools onto /usr/bin: kind, kubectx, docker-compose and kubens
      # - laptop # installs TLP and configures your system for laptop usage
      # - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section
      # - fonts

  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode # don't add "Nerd Font" suffix.
        - CascadiaCode
        - Hack
        - SourceCodePro
        - Terminus
        - JetBrainsMono
        - NerdFontsSymbolsOnly
      google-fonts:
        - Roboto
        - Open Sans
  
  - type: default-flatpaks
    notify: true   # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub
      # repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
      # - org.gnome.Loupe
      # - one.ablaze.floorp//lightning # This is an example of flatpak which has multiple branches in selection (flatpak//branch).
      # Flatpak runtimes are not supported (like org.winehq.Wine//stable-23.08).
      # Only normal flatpak applications are (like Floorp Lightning web browser in this example).
      # Multiple install of same flatpaks with different branches is not supported.
      remove:
      # - org.gnome.eog
      #
    # A flatpak repo can also be added without having to install flatpaks,
    # as long as one of the repo- fields is present
    user:
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub

  - type: script
    scripts:
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
